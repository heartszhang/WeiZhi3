<Window x:Class="WeiZhi3.Views.WeiboEditWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:w="clr-namespace:WeiZhi3" xmlns:ds="clr-namespace:WeiZhi3.Design"
        xmlns:ws="clr-namespace:WeiZhi3.Converters" xmlns:bs="clr-namespace:WeiZhi3.Behaviours"
        mc:Ignorable="d"
        BorderBrush="{DynamicResource MetroColorFeatureBrush}" BorderThickness="1"
        WindowStyle="None" WindowStartupLocation="CenterOwner" 
        ResizeMode="NoResize" SizeToContent="WidthAndHeight" MaxWidth="640"
        Title="WeiboEditWindow" bs:ClipboardMonitorBehavior.ImageLocalFilePath="{Binding image,Mode=OneWayToSource}"
        d:DataContext="{d:DesignInstance ds:MockWeiboEditViewModel,IsDesignTimeCreatable=True}">
    <Window.Resources>
        <ws:ImageUrlConverter x:Key="iuc"/>
        <ws:StringToVisibilityConverter x:Key="s2v"/>
        <ControlTemplate x:Key="TextBoxEmbedTemplate" TargetType="{x:Type TextBox}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                <Grid >
                    <ScrollViewer Padding="{TemplateBinding Padding}" x:Name="PART_ContentHost" />
                </Grid>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Disabled"/>
                        <VisualState x:Name="ReadOnly"/>
                        <VisualState x:Name="MouseOver"/>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused"/>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="InvalidFocused"/>
                        <VisualState x:Name="InvalidUnfocused"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#FFa0b955"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="#FF8ebc00"/>
                    <Setter Property="Background" Value="White"/>
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="TextBox">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Padding" Value="12,4"/>
            <Setter Property="BorderThickness" Value="0,1"/>
            <Setter Property="FontSize" Value="14pt"/>
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem Header="剪切(_u)" Command="ApplicationCommands.Cut"/>
                        <MenuItem Header="复制(_c)" Command="ApplicationCommands.Copy"/>
                        <MenuItem Header="粘贴(_p)" Command="ApplicationCommands.Paste"/>
                    </ContextMenu>
                </Setter.Value>
            </Setter>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <AdornedElementPlaceholder />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <BooleanToVisibilityConverter x:Key="b2v"/>
        <Style TargetType="Button" x:Key="ImageDropButtonStyle">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Padding" Value="25"/>
            <Setter Property="Foreground" Value="Transparent"/>
            <Setter Property="Background" Value="#10000000"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderBrush="{TemplateBinding Foreground}" Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter/>
                                <Grid RenderTransformOrigin="0.5,0.5" Margin="{TemplateBinding Padding}">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform x:Name="_scale" />
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                    <Ellipse Width="80" Height="80" StrokeThickness="3" Stroke="{TemplateBinding Foreground}" x:Name="_circle"/>
                                    <TextBlock Foreground="{TemplateBinding Foreground}" Text="&#x2715;" FontFamily="Segoe UI Symbol" FontSize="28pt" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Grid>
                            </Grid>
                            <VisualStateManager.VisualStateGroups>

                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="_scale" To="0.95"  Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="_scale" To="0.95"  Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked"/>
                                    <VisualState x:Name="Unchecked"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#30000000"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Fill" Value="#80000000" TargetName="_circle"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <i:Interaction.Behaviors>
        <bs:ClipboardMonitorBehavior/>
    </i:Interaction.Behaviors>
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Close" Executed="ExecuteCloseWindow"/>
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Command="w:WeiZhiCommands.Submit" Key="S" Modifiers="Alt"/>
        <KeyBinding Command="w:WeiZhiCommands.SelectImage" Key="I" Modifiers="Alt"/>
    </Window.InputBindings>
    <StackPanel x:Name="LayoutRoot">
        <Grid Height="24">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="1" Orientation="Horizontal">
                <Button Style="{StaticResource ButtonWindowCommandStyle}" Command="ApplicationCommands.Close" 
                        Padding="12,0" Content="&#x2716;">
                    <!--<Path Stretch="Uniform" Data="{StaticResource PathClose}" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}}" />-->
                </Button>

            </StackPanel>

        </Grid>
        <Grid x:Name="_attatchment_container">
            <Button Style="{StaticResource ImageDropButtonStyle}" Visibility="{Binding (bs:ClipboardMonitorBehavior.ImageLocalFilePath),ElementName=_this,Converter={StaticResource s2v},FallbackValue=Collapsed}" >
                <Image 
                    Source="{Binding (bs:ClipboardMonitorBehavior.ImageLocalFilePath),ElementName=_this,Mode=OneWay,Converter={StaticResource iuc}}"
                    Stretch="Uniform" x:Name="_image"/>
            </Button>
        </Grid>
        <Grid Margin="0,0,0,12">
            <TextBox Height="160" Width="560" Text="{Binding body}" TextWrapping="Wrap" Template="{StaticResource TextBoxEmbedTemplate}"/>
            <Grid Background="#b0000000" Visibility="{Binding is_busying,Mode=OneWay,FallbackValue=Collapsed,Converter={StaticResource b2v}}">
                <TextBlock Text="{Binding reason,Mode=OneWay,FallbackValue='Loading...'}"/>
            </Grid>
        </Grid>
        <Grid Margin="16,0,16,16" TextElement.FontSize="10pt" TextElement.FontFamily="{StaticResource UniversalFonts}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal">
                <Button x:Name="_more"  CommandTarget="{Binding ElementName=_body}"
                        CommandParameter="{Binding AccessToken,Source={StaticResource Locator},Mode=OneWay}"
                        Content="&#x25bc;" Style="{StaticResource MetroButtonStyle}" Padding="4" />
                <Button Content="选择图片文件(_i)" Style="{StaticResource MetroButtonStyle}" Margin="1,0"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Column="1">
                <Button Content="发布微博" Command="w:WeiZhiCommands.Submit" IsDefault="True"
                        CommandParameter="{Binding AccessToken,Source={StaticResource Locator},Mode=OneWay}"
                        Style="{StaticResource MetroDefaultButtonStyle}"/>
            </StackPanel>


        </Grid>
        <Grid>

        </Grid>
    </StackPanel>
</Window>
