<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush Color="{StaticResource MetroColorFeatureFade}" x:Key="MetroColorFeatureFadeBrush"/>
    <SolidColorBrush Color="{StaticResource MetroColorFeature}" x:Key="MetroColorFeatureBrush"/>
    <SolidColorBrush Color="{StaticResource MetroColorFeatureContrast}" x:Key="MetroColorFeatureContrastBrush"/>
    <SolidColorBrush Color="{StaticResource MetroColorText}" x:Key="MetroColorTextBrush"/>

    <Color x:Key="MetroColorFadeTextColor" >#FF666666</Color>
    <SolidColorBrush x:Key="MetroColorTextLight" Color="{StaticResource MetroColorTextSecond}"  />

    <Style x:Key="BasicTextStyle" TargetType="TextBlock">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="#FF464646" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="Segoe UI, Microsoft YaHei UI, Microsoft YaHei,Microsoft JhengHei UI,Microsoft JhengHei" />
        <Setter Property="TextTrimming" Value="WordEllipsis" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <!--<Setter Property="Typography.StylisticSet20" Value="True" />-->
        <!--<Setter Property="Typography.DiscretionaryLigatures" Value="True" />-->
        <!--<Setter Property="TextOptions.TextFormattingMode" Value="Display" />-->
    </Style>

    <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="TextDecorations" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="TextDecorations" Value="Underline" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- window buttons-->
    <ControlTemplate TargetType="Button" x:Key="ButtonWindowCommandTemplate">
        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Pressed"/>
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MetroColorFeatureFadeBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource MetroColorFeatureBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource MetroColorFeatureContrastBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ButtonWindowCommandStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource ButtonWindowCommandTemplate}"/>
    </Style>
    
    <!-- window restore/maximize button template-->
    <ControlTemplate TargetType="ToggleButton" x:Key="ButtonRestoreWindowTemplate">
        <Border Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Pressed"/>
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked"/>
                    <VisualState x:Name="Unchecked"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="_path" Stretch="Uniform" Margin="12,7" Data="{StaticResource PathMaximize}" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ToggleButton}}}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MetroColorFeatureFadeBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource MetroColorFeatureBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource MetroColorFeatureContrastBrush}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Data" TargetName="_path" Value="{StaticResource PathRestore}">
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="ToggleButton" x:Key="ButtonRestoreWindowStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template" Value="{StaticResource ButtonRestoreWindowTemplate}"/>
    </Style>
</ResourceDictionary>